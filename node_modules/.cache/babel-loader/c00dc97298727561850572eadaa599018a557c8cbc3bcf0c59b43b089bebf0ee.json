{"ast":null,"code":"var _jsxFileName = \"/Users/erikhansen/SUNRISE/src/pages/AdminPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminLogin from '../admin/AdminLogin';\nimport AdminDashboard from '../admin/AdminDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if user is already logged in\n    const loggedIn = localStorage.getItem('adminLoggedIn') === 'true';\n    setIsLoggedIn(loggedIn);\n  }, []);\n  const handleLogin = loggedIn => {\n    setIsLoggedIn(loggedIn);\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AdminLogin, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","AdminLogin","AdminDashboard","jsxDEV","_jsxDEV","AdminPage","_s","isLoggedIn","setIsLoggedIn","loggedIn","localStorage","getItem","handleLogin","handleLogout","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/Users/erikhansen/SUNRISE/src/pages/AdminPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdminLogin from '../admin/AdminLogin';\nimport AdminDashboard from '../admin/AdminDashboard';\n\nconst AdminPage: React.FC = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const loggedIn = localStorage.getItem('adminLoggedIn') === 'true';\n    setIsLoggedIn(loggedIn);\n  }, []);\n\n  const handleLogin = (loggedIn: boolean) => {\n    setIsLoggedIn(loggedIn);\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <AdminDashboard onLogout={handleLogout} />\n      ) : (\n        <AdminLogin onLogin={handleLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,cAAc,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,KAAK,MAAM;IACjEH,aAAa,CAACC,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAIH,QAAiB,IAAK;IACzCD,aAAa,CAACC,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBL,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA;IAAAU,QAAA,EACGP,UAAU,gBACTH,OAAA,CAACF,cAAc;MAACa,QAAQ,EAAEF;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1Cf,OAAA,CAACH,UAAU;MAACmB,OAAO,EAAER;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA1BID,SAAmB;AAAAgB,EAAA,GAAnBhB,SAAmB;AA4BzB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}